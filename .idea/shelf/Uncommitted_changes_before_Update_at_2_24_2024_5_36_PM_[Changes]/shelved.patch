Index: src/CodeWars/engine/client/Map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CodeWars.engine.client;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class Map\r\n{\r\n    public static final int DEFAULT_MAP_SIZE = 25;\r\n    public static final int DEFAULT_MAP_SEED = 0;\r\n    public static final float DEFAULT_DIFFICULTY = 0.4f;\r\n    private Random rng;\r\n    private int size;\r\n    private Tile[][] world;\r\n    private int seed;\r\n    private JFrame frame;\r\n    public JPanel containerPanel;\r\n    public UI ui;\r\n\r\n    public Map(UI ui)\r\n    {\r\n        this.frame = ui.frame;\r\n        this.size = ui.size;\r\n        this.seed = ui.seed;\r\n        this.ui = ui;\r\n        rng = new Random(seed);\r\n        world = new Tile[size][size];\r\n        ui.setMap(this);\r\n\r\n        containerPanel = new JPanel();\r\n        containerPanel.setLayout(null);\r\n        containerPanel.setSize(frame.getWidth(),frame.getHeight());\r\n\r\n        Dimension dimensions = frame.getSize();\r\n        double startX = dimensions.getWidth() / 2f - dimensions.getHeight() / 2.23f;\r\n        double endX = dimensions.getWidth() / 2f + dimensions.getHeight() / 2.23f;\r\n        int currX = (int) startX;\r\n        int currY = 0;\r\n        int xIncrement = (int) (endX - startX) / size;\r\n        int yIncrement = (int) (endX - startX) / size;\r\n        for(int i = 0; i < world.length; i++)\r\n        {\r\n            for(int j = 0; j < world[i].length; j++)\r\n            {\r\n                if(rng.nextFloat() > 1 - DEFAULT_DIFFICULTY)\r\n                {\r\n                    world[i][j] = new Tile(xIncrement, currX,currY, j, world.length - i - 1, false, ui);\r\n                }\r\n                else\r\n                {\r\n                    world[i][j] = new Tile(xIncrement, currX,currY, j, world.length - i - 1, true, ui);\r\n                }\r\n                containerPanel.add(world[i][j].tile);\r\n                containerPanel.repaint();\r\n                currX += xIncrement;\r\n            }\r\n            currX = (int) startX;\r\n            currY += yIncrement;\r\n        }\r\n\r\n        frame.add(containerPanel);\r\n        frame.repaint();\r\n    }\r\n\r\n    public void loadFile(File loadFile) throws IOException\r\n    {\r\n        String[] fileLines = Utilities.readFile(loadFile);\r\n        size = fileLines.length;\r\n        ui.size = size;\r\n        ui.sizeText.setText(\"\" + size);\r\n        int[][] newWorld = new int[size][size];\r\n        for(int i = 0; i < fileLines.length; i++)\r\n        {\r\n            String[] split = fileLines[i].split(\" \");\r\n            for(int j = 0; j < split.length; j++)\r\n            {\r\n                newWorld[i][j] = Integer.parseInt(split[j]);\r\n            }\r\n        }\r\n\r\n        frame.remove(containerPanel);\r\n        containerPanel = new JPanel();\r\n        containerPanel.setLayout(null);\r\n        containerPanel.setSize(frame.getWidth(),frame.getHeight());\r\n\r\n        world = new Tile[size][size];\r\n\r\n        Dimension dimensions = frame.getSize();\r\n        double startX = dimensions.getWidth() / 2f - dimensions.getHeight() / 2.23f;\r\n        double endX = dimensions.getWidth() / 2f + dimensions.getHeight() / 2.23f;\r\n        int currX = (int) startX;\r\n        int currY = 0;\r\n        int xIncrement = (int) (endX - startX) / size;\r\n        int yIncrement = (int) (endX - startX) / size;\r\n        for(int i = 0; i < newWorld.length; i++)\r\n        {\r\n            for(int j = 0; j < newWorld[i].length; j++)\r\n            {\r\n                world[i][j] = new Tile(xIncrement, currX,currY, j, world.length - i - 1,\r\n                        newWorld[i][j] == 1, ui);\r\n                containerPanel.add(world[i][j].tile);\r\n\r\n                currX += xIncrement;\r\n            }\r\n            currX = (int) startX;\r\n            currY += yIncrement;\r\n        }\r\n        frame.add(containerPanel);\r\n        frame.repaint();\r\n    }\r\n\r\n    public void loadFile(String filePath) throws IOException\r\n    {\r\n        String[] fileLines = Utilities.readFile(filePath);\r\n        size = fileLines.length;\r\n        int[][] newWorld = new int[size][size];\r\n        for(int i = 0; i < fileLines.length; i++)\r\n        {\r\n            String[] split = fileLines[i].split(\" \");\r\n            for(int j = 0; j < split.length; j++)\r\n            {\r\n                newWorld[i][j] = Integer.parseInt(split[j]);\r\n            }\r\n        }\r\n\r\n        frame.remove(containerPanel);\r\n        containerPanel = new JPanel();\r\n        containerPanel.setLayout(null);\r\n        containerPanel.setSize(frame.getWidth(),frame.getHeight());\r\n\r\n        world = new Tile[size][size];\r\n\r\n        Dimension dimensions = frame.getSize();\r\n        double startX = dimensions.getWidth() / 2f - dimensions.getHeight() / 2.23f;\r\n        double endX = dimensions.getWidth() / 2f + dimensions.getHeight() / 2.23f;\r\n        int currX = (int) startX;\r\n        int currY = 0;\r\n        int xIncrement = (int) (endX - startX) / size;\r\n        int yIncrement = (int) (endX - startX) / size;\r\n        for(int i = 0; i < newWorld.length; i++)\r\n        {\r\n            for(int j = 0; j < newWorld[i].length; j++)\r\n            {\r\n                world[i][j] = new Tile(xIncrement, currX,currY, j, world.length - i - 1,\r\n                        newWorld[i][j] == 1, ui);\r\n                containerPanel.add(world[i][j].tile);\r\n\r\n                currX += xIncrement;\r\n            }\r\n            currX = (int) startX;\r\n            currY += yIncrement;\r\n        }\r\n        frame.add(containerPanel);\r\n        frame.repaint();\r\n    }\r\n\r\n    public void regenMap()\r\n    {\r\n        size = ui.size;\r\n        rng = new Random(ui.seed);\r\n        frame.remove(containerPanel);\r\n        containerPanel = new JPanel();\r\n        containerPanel.setLayout(null);\r\n        containerPanel.setSize(frame.getWidth(),frame.getHeight());\r\n\r\n        world = new Tile[size][size];\r\n\r\n        Dimension dimensions = frame.getSize();\r\n        double startX = dimensions.getWidth() / 2f - dimensions.getHeight() / 2.23f;\r\n        double endX = dimensions.getWidth() / 2f + dimensions.getHeight() / 2.23f;\r\n        int currX = (int) startX;\r\n        int currY = 0;\r\n        int xIncrement = (int) (endX - startX) / size;\r\n        int yIncrement = (int) (endX - startX) / size;\r\n        for(int i = 0; i < world.length; i++)\r\n        {\r\n            for(int j = 0; j < world[i].length; j++)\r\n            {\r\n                if(rng.nextFloat() > 1 - DEFAULT_DIFFICULTY)\r\n                {\r\n                    world[i][j] = new Tile(xIncrement, currX,currY, j, world.length - i - 1, false, ui);\r\n                }\r\n                else\r\n                {\r\n                    world[i][j] = new Tile(xIncrement, currX,currY, j, world.length - i - 1, true, ui);\r\n                }\r\n                containerPanel.add(world[i][j].tile);\r\n\r\n                currX += xIncrement;\r\n            }\r\n            currX = (int) startX;\r\n            currY += yIncrement;\r\n        }\r\n\r\n        frame.add(containerPanel);\r\n        frame.repaint();\r\n    }\r\n\r\n    private Point arrayIndexToPoint(int row, int col)\r\n    {\r\n        return new Point(col, world.length - row - 1);\r\n    }\r\n\r\n    public boolean onTheMap(Point p)\r\n    {\r\n        return (p.x < size && p.x >= 0 && p.y < size && p.y >= 0);\r\n    }\r\n\r\n    public boolean isTraversable(Point p)\r\n    {\r\n        int[] indices = pointToArrayIndex(p);\r\n        return world[indices[0]][indices[1]].traversable;\r\n    }\r\n\r\n    public int[] pointToArrayIndex(Point p)\r\n    {\r\n        return new int[] {world.length - p.y - 1, p.x};\r\n    }\r\n\r\n    public void highlightTile(Point p, Color c)\r\n    {\r\n        int[] indices = pointToArrayIndex(p);\r\n        world[indices[0]][indices[1]].tile.setBackground(c);\r\n    }\r\n\r\n    public void highlightTiles(List<Point> points, Color c)\r\n    {\r\n        for(Point p : points)\r\n        {\r\n            highlightTile(p, c);\r\n        }\r\n        frame.repaint();\r\n    }\r\n\r\n    public void resetHighlights()\r\n    {\r\n        for(int i = 0; i < world.length; i++)\r\n        {\r\n            for (int j = 0; j < world[i].length; j++)\r\n            {\r\n                if(world[i][j].traversable)\r\n                {\r\n                    world[i][j].tile.setBackground(Color.white);\r\n                }\r\n                else\r\n                {\r\n                    world[i][j].tile.setBackground(Color.red);\r\n                }\r\n            }\r\n        }\r\n        frame.repaint();\r\n    }\r\n\r\n    public int getSize()\r\n    {\r\n        return size;\r\n    }\r\n\r\n    public void setSize(int size)\r\n    {\r\n        this.size = size;\r\n        ui.sizeText.setText(\"\" + size);\r\n        ui.size = size;\r\n    }\r\n\r\n    public void setSeed(int seed)\r\n    {\r\n        this.seed = seed;\r\n        ui.seedText.setText(\"\" + seed);\r\n        ui.seed = seed;\r\n    }\r\n\r\n    public String saveString()\r\n    {\r\n        String str = \"\";\r\n        for(int i = 0; i < world.length; i++)\r\n        {\r\n            for(int j = 0; j < world[i].length; j++)\r\n            {\r\n                if(world[i][j].traversable)\r\n                {\r\n                    str += \"1 \";\r\n                }\r\n                else\r\n                {\r\n                    str += \"0 \";\r\n                }\r\n            }\r\n            str += \"\\n\";\r\n        }\r\n        return str;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/CodeWars/engine/client/Map.java b/src/CodeWars/engine/client/Map.java
--- a/src/CodeWars/engine/client/Map.java	(revision b1556c2679ff10c3516a2020635ee42047c68e2e)
+++ b/src/CodeWars/engine/client/Map.java	(date 1708812186311)
@@ -45,14 +45,7 @@
         {
             for(int j = 0; j < world[i].length; j++)
             {
-                if(rng.nextFloat() > 1 - DEFAULT_DIFFICULTY)
-                {
-                    world[i][j] = new Tile(xIncrement, currX,currY, j, world.length - i - 1, false, ui);
-                }
-                else
-                {
                     world[i][j] = new Tile(xIncrement, currX,currY, j, world.length - i - 1, true, ui);
-                }
                 containerPanel.add(world[i][j].tile);
                 containerPanel.repaint();
                 currX += xIncrement;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3cd76a97-2922-4c9c-8a31-f31c0123d23e\" name=\"Changes\" comment=\"some runner and direction stuff\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/CodeWars/engine/client/Client.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/CodeWars/engine/client/Client.java\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"2cfe8a18-1c19-4993-8531-d9849a380bd0\" name=\"Changes by Jack\" comment=\"\" />\r\n    <list id=\"2f3b03d6-b12e-4b83-86e1-87fa8f53cb92\" name=\"Changes by sethlifland\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\",\r\n    \"assignee\": \"slifland\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/MorbidMight/CodeWars.git\",\r\n    \"accountId\": \"edc0f460-46fd-48e9-8ec2-745f25a03a26\"\r\n  }\r\n}]]></component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cpFFRjTMWkDaRnGjOsfRcsmnrp\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"jdk.selected.JAVA_MODULE\": \"corretto-19\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.stylelint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.stylelint\": \"\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"CodeWars.engine.client.Client\" />\r\n      <module name=\"CodeWars\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"CodeWars.engine.client.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Client\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-db596990d856-JavaScript-IU-241.13688.18\" />\r\n        <option value=\"jdk-19.0.2-corretto-19.0.2-ec33d87e4238-3eb1ef11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3cd76a97-2922-4c9c-8a31-f31c0123d23e\" name=\"Changes\" comment=\"\" />\r\n      <created>1708800508674</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708800508674</updated>\r\n      <workItem from=\"1708800509675\" duration=\"7102000\" />\r\n      <workItem from=\"1708810061732\" duration=\"1460000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"altered structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708800976735</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708800976735</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"some runner and direction stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708810882203</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708810882203</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"altered structure\" />\r\n    <MESSAGE value=\"some runner and direction stuff\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"some runner and direction stuff\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.ArithmeticException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b1556c2679ff10c3516a2020635ee42047c68e2e)
+++ b/.idea/workspace.xml	(date 1708813384722)
@@ -6,7 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="3cd76a97-2922-4c9c-8a31-f31c0123d23e" name="Changes" comment="some runner and direction stuff">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/CodeWars/engine/client/Client.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/CodeWars/engine/client/Client.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/CodeWars/engine/client/Map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/CodeWars/engine/client/Map.java" afterDir="false" />
     </list>
     <list id="2cfe8a18-1c19-4993-8531-d9849a380bd0" name="Changes by Jack" comment="" />
     <list id="2f3b03d6-b12e-4b83-86e1-87fa8f53cb92" name="Changes by sethlifland" comment="" />
@@ -26,18 +26,18 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
-  "lastFilter": {
-    "state": "OPEN",
-    "assignee": "slifland"
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;slifland&quot;
   }
-}]]></component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/MorbidMight/CodeWars.git",
-    "accountId": "edc0f460-46fd-48e9-8ec2-745f25a03a26"
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/MorbidMight/CodeWars.git&quot;,
+    &quot;accountId&quot;: &quot;edc0f460-46fd-48e9-8ec2-745f25a03a26&quot;
   }
-}]]></component>
+}</component>
   <component name="ProblemsViewState">
     <option name="selectedTabId" value="CurrentFile" />
   </component>
@@ -52,6 +52,7 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "Application.Client.executor": "Run",
     "Application.Main.executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
